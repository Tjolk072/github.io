command: docker template scaffold
short: Choose an application template or service template(s) and scaffold a new project
long: Choose an application template or service template(s) and scaffold a new project
usage: docker template scaffold application [<alias=service>...] OR scaffold [alias=]service
  [<[alias=]service>...]
pname: docker template
plink: docker_template.yaml
options:
- option: name
  value_type: string
  description: Application name
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: org
  value_type: string
  description: |
    Deploy to a specific organization / docker hub user (if not specified, it will use your current hub login)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: path
  value_type: string
  description: Deploy to a specific path
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: platform
  value_type: string
  default_value: linux
  description: Target platform (linux|windows)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: server
  value_type: string
  description: Deploy to a specific registry server (host[:port])
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
- option: set
  shorthand: s
  value_type: stringArray
  default_value: '[]'
  description: Override parameters values (service.name=value)
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: "docker template scaffold react-java-mysql -s back.java=10 -s front.externalPort=80
  \ndocker template scaffold react-java-mysql java=back reactjs=front -s reactjs.externalPort=80
  \ndocker template scaffold back=spring front=react -s back.externalPort=9000 \ndocker
  template scaffold react-java-mysql --server=myregistry:5000 --org=myorg"
deprecated: false
experimental: false
experimentalcli: true
kubernetes: false
swarm: false

