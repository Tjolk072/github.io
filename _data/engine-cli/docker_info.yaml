command: docker info
short: Display system-wide information
long: |-
  This command displays system wide information regarding the Docker installation.
  Information displayed includes the kernel version, number of containers and images.
  The number of images shown is the number of unique images. The same image tagged
  under different names is counted only once.

  If a format is specified, the given template will be executed instead of the
  default format. Go's [text/template](http://golang.org/pkg/text/template/) package
  describes all the details of the format.

  Depending on the storage driver in use, additional information can be shown, such
  as pool name, data file, metadata file, data space used, total data space, metadata
  space used, and total metadata space.

  The data file is where the images are stored and the metadata file is where the
  meta data regarding those images are stored. When run for the first time Docker
  allocates a certain amount of data space and meta data space from the space
  available on the volume where `/var/lib/docker` is mounted.
usage: docker info [OPTIONS]
pname: docker
plink: docker.yaml
options:
- option: format
  shorthand: f
  value_type: string
  description: Format the output using the given Go template
  deprecated: false
  experimental: false
  experimentalcli: false
  kubernetes: false
  swarm: false
examples: "### Show output\n\nThe example below shows the output for a daemon running
  on Red Hat Enterprise Linux,\nusing the `devicemapper` storage driver. As can be
  seen in the output, additional\ninformation about the `devicemapper` storage driver
  is shown:\n\n```bash\n$ docker info\nClient:\n Debug Mode: false\n\nServer:\n Containers:
  14\n  Running: 3\n  Paused: 1\n  Stopped: 10\n Images: 52\n Server Version: 1.10.3\n
  Storage Driver: devicemapper\n  Pool Name: docker-202:2-25583803-pool\n  Pool Blocksize:
  65.54 kB\n  Base Device Size: 10.74 GB\n  Backing Filesystem: xfs\n  Data file:
  /dev/loop0\n  Metadata file: /dev/loop1\n  Data Space Used: 1.68 GB\n  Data Space
  Total: 107.4 GB\n  Data Space Available: 7.548 GB\n  Metadata Space Used: 2.322
  MB\n  Metadata Space Total: 2.147 GB\n  Metadata Space Available: 2.145 GB\n  Udev
  Sync Supported: true\n  Deferred Removal Enabled: false\n  Deferred Deletion Enabled:
  false\n  Deferred Deleted Device Count: 0\n  Data loop file: /var/lib/docker/devicemapper/devicemapper/data\n
  \ Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata\n  Library
  Version: 1.02.107-RHEL7 (2015-12-01)\n Execution Driver: native-0.2\n Logging Driver:
  json-file\n Plugins:\n  Volume: local\n  Network: null host bridge\n Kernel Version:
  3.10.0-327.el7.x86_64\n Operating System: Red Hat Enterprise Linux Server 7.2 (Maipo)\n
  OSType: linux\n Architecture: x86_64\n CPUs: 1\n Total Memory: 991.7 MiB\n Name:
  ip-172-30-0-91.ec2.internal\n ID: I54V:OLXT:HVMM:TPKO:JPHQ:CQCD:JNLC:O3BZ:4ZVJ:43XJ:PFHZ:6N2S\n
  Docker Root Dir: /var/lib/docker\n Debug Mode: false\n Username: gordontheturtle\n
  Registry: https://index.docker.io/v1/\n Insecure registries:\n  myinsecurehost:5000\n
  \ 127.0.0.0/8\n```\n \n### Show debugging output\n\nHere is a sample output for
  a daemon running on Ubuntu, using the overlay2\nstorage driver and a node that is
  part of a 2-node swarm:\n\n```bash\n$ docker -D info\nClient:\n Debug Mode: true\n\nServer:\n
  Containers: 14\n  Running: 3\n  Paused: 1\n  Stopped: 10\n Images: 52\n Server Version:
  1.13.0\n Storage Driver: overlay2\n  Backing Filesystem: extfs\n  Supports d_type:
  true\n  Native Overlay Diff: false\n Logging Driver: json-file\n Cgroup Driver:
  cgroupfs\n Plugins:\n  Volume: local\n  Network: bridge host macvlan null overlay\n
  Swarm: active\n  NodeID: rdjq45w1op418waxlairloqbm\n  Is Manager: true\n  ClusterID:
  te8kdyw33n36fqiz74bfjeixd\n  Managers: 1\n  Nodes: 2\n  Orchestration:\n   Task
  History Retention Limit: 5\n  Raft:\n   Snapshot Interval: 10000\n   Number of Old
  Snapshots to Retain: 0\n   Heartbeat Tick: 1\n   Election Tick: 3\n  Dispatcher:\n
  \  Heartbeat Period: 5 seconds\n  CA Configuration:\n   Expiry Duration: 3 months\n
  \ Root Rotation In Progress: false\n  Node Address: 172.16.66.128 172.16.66.129\n
  \ Manager Addresses:\n   172.16.66.128:2477\n Runtimes: runc\n Default Runtime:
  runc\n Init Binary: docker-init\n containerd version: 8517738ba4b82aff5662c97ca4627e7e4d03b531\n
  runc version: ac031b5bf1cc92239461125f4c1ffb760522bbf2\n init version: N/A (expected:
  v0.13.0)\n Security Options:\n  apparmor\n  seccomp\n   Profile: default\n Kernel
  Version: 4.4.0-31-generic\n Operating System: Ubuntu 16.04.1 LTS\n OSType: linux\n
  Architecture: x86_64\n CPUs: 2\n Total Memory: 1.937 GiB\n Name: ubuntu\n ID: H52R:7ZR6:EIIA:76JG:ORIY:BVKF:GSFU:HNPG:B5MK:APSC:SZ3Q:N326\n
  Docker Root Dir: /var/lib/docker\n Debug Mode: true\n  File Descriptors: 30\n  Goroutines:
  123\n  System Time: 2016-11-12T17:24:37.955404361-08:00\n  EventsListeners: 0\n
  Http Proxy: http://test:test@proxy.example.com:8080\n Https Proxy: https://test:test@proxy.example.com:8080\n
  No Proxy: localhost,127.0.0.1,docker-registry.somecorporation.com\n Registry: https://index.docker.io/v1/\n
  WARNING: No swap limit support\n Labels:\n  storage=ssd\n  staging=true\n Experimental:
  false\n Insecure Registries:\n  127.0.0.0/8\n Registry Mirrors:\n   http://192.168.1.2/\n
  \  http://registry-mirror.example.com:5000/\n Live Restore Enabled: false\n```\n\nThe
  global `-D` option causes all `docker` commands to output debug information.\n\n###
  Format the output\n\nYou can also specify the output format:\n\n```bash\n$ docker
  info --format '{{json .}}'\n\n{\"ID\":\"I54V:OLXT:HVMM:TPKO:JPHQ:CQCD:JNLC:O3BZ:4ZVJ:43XJ:PFHZ:6N2S\",\"Containers\":14,
  ...}\n```\n\n### Run `docker info` on Windows\n\nHere is a sample output for a daemon
  running on Windows Server 2016:\n\n```none\nE:\\docker>docker info\nClient:\n Debug
  Mode: false\n\nServer:\n Containers: 1\n  Running: 0\n  Paused: 0\n  Stopped: 1\n
  Images: 17\n Server Version: 1.13.0\n Storage Driver: windowsfilter\n  Windows:\n
  Logging Driver: json-file\n Plugins:\n  Volume: local\n  Network: nat null overlay\n
  Swarm: inactive\n Default Isolation: process\n Kernel Version: 10.0 14393 (14393.206.amd64fre.rs1_release.160912-1937)\n
  Operating System: Windows Server 2016 Datacenter\n OSType: windows\n Architecture:
  x86_64\n CPUs: 8\n Total Memory: 3.999 GiB\n Name: WIN-V0V70C0LU5P\n ID: NYMS:B5VK:UMSL:FVDZ:EWB5:FKVK:LPFL:FJMQ:H6FT:BZJ6:L2TD:XH62\n
  Docker Root Dir: C:\\control\n Debug Mode: false\n Registry: https://index.docker.io/v1/\n
  Insecure Registries:\n  127.0.0.0/8\n Registry Mirrors:\n   http://192.168.1.2/\n
  \  http://registry-mirror.example.com:5000/\n Live Restore Enabled: false\n```"
deprecated: false
experimental: false
experimentalcli: false
kubernetes: false
swarm: false

